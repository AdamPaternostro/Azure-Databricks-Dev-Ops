name: Databricks-CI-CD

# Manual trigger with parameters
on:
  workflow_dispatch:
    inputs:
      # This is the path of your notebooks in Git.  Currently, this is not recursively deploying notebooks
      GIT_NOTEBOOK_PATH:
        description: 'Notebooks Relative Path in Git'
        required: true
        default: 'notebooks/MyProject'

      # This is where in your Databricks workspace your notebooks will be deployed
      # Typically this is under a Folder under the Workspace and not under a specific user's folder
      NOTEBOOK_DEPLOYMENT_PATH:
        description: 'Notebooks Deployment Path to Databricks'
        required: true
        default: '/MyProject'

      # This resource group for the Databricks workspace and KeyVault
      RESOURCE_GROUP:
        description: 'Resource Group Name'
        required: true
        default: 'Databricks-MyProject'

      # The Azure region to which to deploy your resources
      LOCATION:
        description: 'Azure Region'
        required: true
        default: 'EastUS2'

      # This is the name of your Azure Databricks resource
      WORKSPACE_NAME:
        description: 'Databricks workspace name'
        required: true
        default: 'Databricks workspace name'

      # This is a KeyVault for holding the Service Principal to make Databricks API calls and to hold Databricks KeyVault backed Secrets
      KEY_VAULT_NAME:
        description: 'KeyVault name'
        required: true
        default: 'KeyVault-MyProject'

      # This is a KeyVault for holding the Service Principal to make Databricks API calls and to hold Databricks KeyVault backed Secrets
      SUBSCRIPTION_ID:
        description: 'Azure Subscription Id'
        required: true
        default: '00000000-0000-0000-0000-000000000000'

      # NOTE: You could make this a variable and then change the name to append the environment parameter above.  You would need to create a corrisponding service connection
      # e.g. If you connection is named "MyConnection", you would have MyConnection-Dev (for dev subscription), MyConnection-QA (etc...)
      RESOURCE_MANAGER_CONNECTION:
        description: 'Azure Resource Connection Name'
        required: true
        default: 'Microsoft Azure Adam Paternostro(00000000-0000-0000-0000-000000000000)'

      # Inialize the system
      # Note: We only want to run the KeyVault ARM template once.  If you keep re-running, then you will OVERWRITE your values
      MODE:
        description: 'Deployment Mode (Databricks or Initialize-KeyVault)'
        required: true
        default: 'Databricks'



jobs:
  #############################################################
  # Builds the code
  # Currently this is not building and JAR files, but you would do that here
  # This is packaging up the files from Git to the Artifacts files
  #############################################################
  build:
    runs-on: ubuntu-latest

    # Checkout code
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Show the environment variables for debugging
    - name: Display Environment Variable
      uses: azure/powershell@v1
      with:
        inlineScript: |
          dir env:
        azPSVersion: '3.1.0'

    # Publish Artifact: ARM-Templates
    - name: 'Publish Artifact: ARM-Templates' 
      uses: actions/upload-artifact@v2
      with:
        name: 'ARM-Templates'
        path: '${{ github.workspace }}/ARM-Templates'

    # Publish Artifact: Databricks-Clusters
    - name: 'Publish Artifact: Databricks-Clusters' 
      uses: actions/upload-artifact@v2
      with:
        name: 'clusters'
        path: '${{ github.workspace }}/clusters'

    # Publish Artifact: Databricks-Notebooks
    - name: 'Publish Artifact: Databricks-Notebooks' 
      uses: actions/upload-artifact@v2
      with:
        name: 'notebooks'
        path: '${{ github.workspace }}/notebooks'

    # Publish Artifact: Databricks-Jobs
    - name: 'Publish Artifact: Databricks-Jobs' 
      uses: actions/upload-artifact@v2
      with:
        name: 'jobs'
        path: '${{ github.workspace }}/jobs'

    # Publish Artifact: Databricks-Init-Scripts
    - name: 'Publish Artifact: Databricks-Init-Scripts' 
      uses: actions/upload-artifact@v2
      with:
        name: 'init-scripts'
        path: '${{ github.workspace }}/init-scripts'

    # Publish Artifact: Databricks-Deployment-Scripts
    - name: 'Publish Artifact: Databricks-Deployment-Scripts' 
      uses: actions/upload-artifact@v2
      with:
        name: 'deployment-scripts'
        path: '${{ github.workspace }}/deployment-scripts'                                


#############################################################
# Deploy to Dev
#############################################################
  build:
    runs-on: ubuntu-latest

    steps:
    # Show the environment variables for debugging
    - name: Display Environment Variable
      uses: azure/powershell@v1
      with:
        inlineScript: |
          dir env:
        azPSVersion: '3.1.0'        

    # Download Artifact: ARM-Templates
    - name: 'Download Artifact: ARM-Templates' 
      uses: actions/download-artifact@v2
      with:
        name: 'ARM-Templates'

    # Download Artifact: Databricks-Clusters
    - name: 'Download Artifact: Databricks-Clusters' 
      uses: actions/download-artifact@v2
      with:
        name: 'clusters'

    # Download Artifact: Databricks-Notebooks
    - name: 'Download Artifact: Databricks-Notebooks' 
      uses: actions/download-artifact@v2
      with:
        name: 'notebooks'

    # Download Artifact: Databricks-Jobs
    - name: 'Download Artifact: Databricks-Jobs' 
      uses: actions/download-artifact@v2
      with:
        name: 'jobs'

    # Download Artifact: Databricks-Init-Scripts
    - name: 'Download Artifact: Databricks-Init-Scripts' 
      uses: actions/download-artifact@v2
      with:
        name: 'init-scripts'

    # Login to Azure
    - name: Login via Az module
      uses: azure/login@v1.1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true 

    - name: Set environment variable with the "-Dev" "Environment"
      uses: allenevans/set-env@v1.0.0
      with:
        resouceGroupName: '${{ github.event.inputs.RESOURCE_GROUP }}-Dev'
        databricksWorkspaceName: '${{ github.event.inputs.WORKSPACE_NAME }}-Dev'
        keyVaultName: '${{ github.event.inputs.KEY_VAULT_NAME }}-Dev'

    - name: Deploy ARM Template
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az deployment group create \
          --name 'Deploy-Databricks-Workspace' \
          --resource-group '$(resouceGroupName)'' \
          --template-file '${{ github.workspace }}/ARM-Templates/azuredeploy.databricks.json' \
          --parameters '-workspaceName $(databricksWorkspaceName)' \
          --mode Incremental
