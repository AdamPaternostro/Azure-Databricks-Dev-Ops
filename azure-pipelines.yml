# Build and JAR files or such and copy to artifacts folder
# Copy Git files to artifacts folder
# Deploy the ARM template
# 

trigger: none

parameters:
- name: ENVIRONMENT
  displayName: Environment
  type: string
  default: Dev
  values:
  - Dev
  - QA
  - Prod

- name: RESOURCE_GROUP
  displayName: Resource Group Name
  type: string
  default: 'Databricks-MyProject'
  
- name: LOCATION
  displayName: Azure Region
  type: string
  default: 'EastUS2'
  values:
  - EastUS
  - EastUS2
  - Add-others-here

- name: WORKSPACE_NAME
  displayName: Databricks workspace name
  type: string
  default: 'Databricks-MyProject'

- name: SUBSCRIPTION_ID
  displayName: Azure Subscription Id
  type: string
  default: '00000000-0000-0000-0000-000000000000'

  # NOTE: You could make this a variable and then change the name to append the environment parameter above.  You would need to create a corrisponding service connection
  # e.g. If you connection is named "MyConnection", you would have MyConnection-Dev (for dev subscription), MyConnection-QA (etc...)
- name: RESOURCE_MANAGER_CONNECTION
  displayName: Azure Resource Connection Name
  type: string
  default: 'Microsoft Azure Adam Paternostro(00000000-0000-0000-0000-000000000000)'


stages:
#############################################################
# Build the code
# Currently this is not building and JAR files, but you would do that here
# This is packaging up the files from Git to the Artifacts files
#############################################################
- stage: Build
  jobs:
  - job: JobBuild
    displayName: 'Job Build'
    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: ARM-Templates'
        inputs:
          PathtoPublish: '$(Build.Repository.LocalPath)/ARM-Templates'
          ArtifactName: 'ARM-Templates'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: Databricks-Clusters'
        inputs:
          PathtoPublish: '$(Build.Repository.LocalPath)/clusters'
          ArtifactName: 'clusters'


#############################################################
# Deploy to Dev
#############################################################
- stage: Staging
  jobs:
  - deployment: JobDev
    displayName: 'Job Dev'
    environment: 'Dev'
    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      runOnce:
        deploy:  
          steps:
            - checkout: none

            ### Show all the environment variables ###
            - task: PowerShell@2
              displayName: "Current Environment Variables"
              inputs:
                targetType: 'inline'
                script: 'dir env:'


            - task: AzureResourceManagerTemplateDeployment@3
              displayName: "Deploy Databricks ARM Template"
              inputs:
                deploymentScope: 'Resource Group'
                azureResourceManagerConnection: ${{ parameters.RESOURCE_MANAGER_CONNECTION}}
                subscriptionId: ${{ parameters.SUBSCRIPTION_ID }}
                action: 'Create Or Update Resource Group'
                resourceGroupName: ${{ parameters.RESOURCE_GROUP }}-${{ parameters.ENVIRONMENT }}
                location: ${{ parameters.LOCATION }}
                templateLocation: 'Linked artifact'
                csmFile: '$(Pipeline.Workspace)/ARM-Templates/azuredeploy.databricks.json'
                csmParametersFile: '$(Pipeline.Workspace)/ARM-Templates/parameters.databricks.json'
                overrideParameters: '-workspaceName ${{ parameters.WORKSPACE_NAME }}-${{ parameters.ENVIRONMENT }}'
                deploymentMode: 'Incremental'